[General]
#debug-on-errors = true
sim-time-limit = 50s
seed-0-mt = 5
#record-eventlog = true

network = inet.examples.manetrouting.net80211_aodv.Net80211_aodv

cmdenv-express-mode = true

description = "Manet routing Simple test"

result-dir = "results_factory"

*.numFixHosts = 1
*.numHosts = 20

# Mobility
#**.mobility.typename = "StationaryMobility"
**.fixhost[*].mobility.typename = "StationaryMobility"
**.host[*].mobility.typename = "StationaryMobility"
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false
**.fixhost[0].mobility.initialX = 999m
**.fixhost[0].mobility.initialY = 999m
**.host[0].mobility.initialX = 1m
**.host[0].mobility.initialY = 1m

# Application
**.numApps = 2
**.host[*].app[1].typename = "UdpBasicBurstNotification"
**.host[0].app[1].destAddresses = "fixhost[0]"
**.host[*].app[1].destAddresses = ""
**.app[1].startTime = 10s+uniform(1s,5s)
#**.app[1].startTime = 10s
**.app[1].localPort = 1234
**.app[1].destPort = 1234
**.app[1].messageLength = 512B  #
#**.udpApp[0].messageLength = 2000B  #
#**.udpApp[0].sendInterval = 0.2s + uniform(-0.001s,0.001s)
**.app[1].sendInterval = 0.5s + uniform(-0.001s,0.001s)
**.app[1].burstDuration = 0s
**.app[1].chooseDestAddrMode = "perBurst"
**.app[1].sleepDuration = 1s # useless
**.fixhost[0].app[1].typename = "UdpSink"
**.fixhost[0].app[1].localPort = 1234
**.updateFromDisplayString = false

# MAC
**.arp.typename = "GlobalArp"
**.wlan[*].mac.opMode = "g(mixed)"
**.wlan[*].mac.dcf.channelAccess.pendingQueue.frameCapacity = 10
**.wlan[*].mac.dcf.channelAccess.cwMin = 15
**.wlan[*].mac.dcf.channelAccess.cwMax = 1023
**.wlan[*].mac.dcf.recoveryProcedure.shortRetryLimit = 4
**.wlan[*].mac.dcf.recoveryProcedure.longRetryLimit = 4
**.wlan[*].mac.dcf.rtsPolicy.rtsThreshold = 5000 B
**.wlan*.bitrate = 54Mbps
**.wlan[*].mac.dcf.rateSelection.controlFrameBitrate = 54Mbps
**.wlan[*].mac.dcf.rateSelection.responseAckFrameBitrate = 54Mbps
**.wlan[*].mac.dcf.rateSelection.responseCtsFrameBitrate = 54Mbps
**.wlan[*].mac.dcf.rateSelection.dataFrameBitrate = 54Mbps
**.wlan[*].mac.dcf.rateSelection.mgmtFrameBitrate = 54Mbps

# PHY
#**.SensitivityTable = xmldoc("sensitivityTable")
**.wlan[*].radio.bandName = "2.4 GHz"
**.wlan[*].radio.channelNumber = 0
**.wlan[*].radio.transmitter.power = 2mW
**.wlan*.radio.receiver.sensitivity = -90dBm
**.wlan*.radio.receiver.energyDetection = -90dBm
**.wlan[*].radio.receiver.snirThreshold = 4 dB
*.*.wlan[*].radio.receiver.errorModel.typename = ""
*.radioMedium.backgroundNoise.power = -110 dBm
#*.radioMedium.rangeFilter = "communicationRange"

######################################################################
# manet routing
######################################################################
[Config OLSR]
extends = General
**.app[0].typename = "Olsr"

*.numFixHosts = 1
*.numHosts = 1

**.fixhost[*].mobility.typename = "StationaryMobility"
**.host[*].mobility.typename = "StationaryMobility"
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 300m
**.constraintAreaMaxY = 150m
**.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false
#**.fixhost[0].mobility.initialX = 122m
#**.fixhost[0].mobility.initialY = 0m
#**.host[0].mobility.initialX = 0m
#**.host[0].mobility.initialY = 0m

**.fixhost[0].mobility.initialX = 50m
**.fixhost[0].mobility.initialY = 60m
**.host[0].mobility.initialX = 0m
**.host[0].mobility.initialY = 60m

*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m
*.radioMedium.pathLoss.typename = "FactoryFading"
*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/0.csv"
*.radioMedium.pathLoss.loadObstacle = true
*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/0.xml") # load physical objects
**.wlan[*].radio.transmitter.power = -6 dBm
**.wlan*.radio.receiver.sensitivity = -90 dBm
**.wlan*.radio.receiver.energyDetection = -90 dBm
**.wlan[*].radio.receiver.snirThreshold = 20 dB

[Config OLSR_MoreData]
extends = OLSR
**.app[1].sendInterval = ${sendInterval = 100, 200, 300, 400, 500, 1000} ms
**.app[1].burstDuration = 0s
**.app[1].chooseDestAddrMode = "perBurst"
**.app[1].sleepDuration = 1s # useless

[Config OLSR_Mob]
extends = General
**.app[0].typename = "Olsr"
**.fixhost[*].mobility.typename = "RandomWaypointMobility"
**.host[*].mobility.typename = "RandomWaypointMobility"
**.mobility.constraintAreaMinX = 0m
**.mobility.speed = ${speed=5,10,20,30} mps
**.mobility.waitTime = 2 s
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false
**.fixhost[0].mobility.initialX = 999m
**.fixhost[0].mobility.initialY = 999m
**.host[0].mobility.initialX = 1m
**.host[0].mobility.initialY = 1m

[Config OLSR_Mob_MoreData]
extends = OLSR_Mob
#**.app[1].sendInterval = 0.05s + uniform(-0.001s,0.001s)
**.app[1].sendInterval = ${sendInterval = 100, 200, 300, 400, 500, 1000} ms
**.app[1].burstDuration = 0s
**.app[1].chooseDestAddrMode = "perBurst"
**.app[1].sleepDuration = 1s # useless

[Config Factory_Env]
extends = General
**.app[0].typename = "Olsr"
.seed = ${seed = 0..9 step 1}
seed-set=${seed}

# Node Number
*.numFixHosts = 1
*.numHosts = 20

## Application
**.app[1].sendInterval = 100 ms
**.app[1].burstDuration = 0s
**.app[1].chooseDestAddrMode = "perBurst"
**.app[1].sleepDuration = 1s # useless

# PHY
*.physicalEnvironment.ground.typename = "FlatGround"
*.physicalEnvironment.ground.elevation = 0m
*.radioMedium.pathLoss.typename = "FactoryFading"
**.wlan[*].radio.transmitter.power = -6 dBm
#**.wlan[*].radio.transmitter.power = 4 dBm
**.wlan*.radio.receiver.sensitivity = -90 dBm
**.wlan*.radio.receiver.energyDetection = -90 dBm
**.wlan[*].radio.receiver.snirThreshold = 20 dB

# Mobility
#**.fixhost[*].mobility.typename = "StationaryMobility"
#**.host[*].mobility.typename = "StationaryMobility"
#**.constraintAreaMinX = 0m
#**.constraintAreaMinY = 0m
#**.constraintAreaMinZ = 0m
#**.constraintAreaMaxX = 300m
#**.constraintAreaMaxY = 150m
#**.constraintAreaMaxZ = 0m
#**.mobility.initFromDisplayString = false
#**.fixhost[0].mobility.initialX = 300m
#**.fixhost[0].mobility.initialY = 150m
#**.host[0].mobility.initialX = 0m
#**.host[0].mobility.initialY = 0m

## Mobility
*.host[*].mobility.typename = "ExtendedBonnMotionMobility"
*.host[*].mobility.is3D = true
*.host[*].mobility.nodeId = -1
*.host[*].mobility.applyDistortion = false
*.host[*].mobility.wpProvided = false
*.host[*].mobility.traceFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/TraceFiles/${seed}_router.csv"
*.host[*].mobility.distFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/DistortionFiles/dist_5m_${seed}_router.csv"
*.host[*].mobility.wpFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations//WaypointFiles/${seed}_wp_router.csv"

*.fixhost[*].mobility.typename = "ExtendedBonnMotionMobility"
*.fixhost[*].mobility.is3D = true
*.fixhost[*].mobility.nodeId = -1
*.fixhost[*].mobility.applyDistortion = false
*.fixhost[*].mobility.wpProvided = false
*.fixhost[*].mobility.traceFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/TraceFiles/${seed}_host.csv"
*.fixhost[*].mobility.distFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/DistortionFiles/dist_5m_${seed}_host.csv"
*.fixhost[*].mobility.wpFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations//WaypointFiles/${seed}_wp_host.csv"

#*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.csv"
#*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.xml") # load physical objects


[Config Factory_Env_OLSR_ETX]
extends = Factory_Env
**.app[0].typename = "Olsr_Etx"
**.app[0].Link_delay = false
**.app[0].ETX_loss_window_size = 1
**.app[0].routing_algorithm = 2
**.app[0].Mpr_algorithm = 1
**.app[0].Link_quality = 2

[Config Factory_Env_OLSR_TVT]
extends = Factory_Env
**.app[0].typename = "Olsr_Etx_TVT"
**.app[0].Link_delay = false
**.app[0].ETX_loss_window_size = 1
**.app[0].routing_algorithm = 2
**.app[0].Mpr_algorithm = 1
**.app[0].Link_quality = ${type=2,4}

[Config Factory_Env_OLSR_TVT_Obstacle]
extends = Factory_Env
**.app[0].typename = "Olsr_Etx_TVT"
**.app[0].Link_delay = false
**.app[0].ETX_loss_window_size = 1
**.app[0].routing_algorithm = 2
**.app[0].Mpr_algorithm = 1
**.app[0].Link_quality = 4
*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.csv"
*.radioMedium.pathLoss.loadObstacle = ${loadobstacle=true,false}
*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.xml") # load physical objects

[Config Factory_Env_OLSR_TVT_Obstacle_LQ]
extends = Factory_Env
**.app[0].typename = "Olsr_Etx_TVT"
**.app[0].Link_delay = false
**.app[0].ETX_loss_window_size = 1
**.app[0].routing_algorithm = 2
**.app[0].Mpr_algorithm = 1
**.app[0].Link_quality = ${type=2,4}
*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.csv"
*.radioMedium.pathLoss.loadObstacle = ${loadobstacle=true,false}
*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.xml") # load physical objects

[Config Factory_Env_OLSR_TVT_DiffRmax]
extends = Factory_Env
#*.numFixHosts = 1
#*.numHosts = 1
#**.wlan[*].radio.transmitter.power = 10 dBm

**.app[0].typename = "Olsr_Etx_TVT"
**.app[0].Link_delay = false
**.app[0].ETX_loss_window_size = 1
#**.app[0].routing_algorithm = 1
**.app[0].routing_algorithm = 2
#**.app[0].Mpr_algorithm = 1
**.app[0].Mpr_algorithm = 5
**.app[0].Link_quality = 4
#*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.csv"
#*.radioMedium.pathLoss.loadObstacle = ${loadObstacle=true,false}
#*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.xml") # load physical objects
#**.app[0].load_losmap = ${loadlosmap=true,false}
**.app[0].load_losmap = false
#**.app[0].Rmax = ${Rmax=50m, 123m, 500m}
**.app[0].Rmax = 50m

#[Config Factory_Env_OLSR_TVT_Obstacle_DiffRmax]
#extends = Factory_Env
#**.app[0].typename = "Olsr_Etx_TVT"
#**.app[0].Link_delay = false
#**.app[0].ETX_loss_window_size = 1
#**.app[0].routing_algorithm = 2
##**.app[0].Mpr_algorithm = 1
#**.app[0].Mpr_algorithm = 5
#**.app[0].Link_quality = 4
##*.radioMedium.pathLoss.blockageFile = "/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.csv"
##*.radioMedium.pathLoss.loadObstacle = ${loadObstacle=true,false}
##*.physicalEnvironment.config = xmldoc("/home/bman/Documents/omnetpp-6.0.3/samples/PARRoT-PARRoT/PARRoT/simulations/BlockageFiles/${seed}.xml") # load physical objects
##**.app[0].load_losmap = ${loadlosmap=true,false}
#**.app[0].load_losmap = false
##**.app[0].Rmax = ${Rmax=50m, 100m, 123m, 150m, 200m, 500m}
#**.app[0].Rmax = 50m

[Config Batman]
**.app[0].typename = "Batman"
**.broadcastDelay=uniform(0s,0.005s)

[Config AodvUU]
**.app[0].typename = "AodvUU"
**.llfeedback = true
**.broadcastDelay=uniform(0s,0.005s)
